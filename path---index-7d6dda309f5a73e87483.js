webpackJsonp([0x81b8806e4260],{391:function(a,t){a.exports={data:{allMarkdownRemark:{totalCount:20,edges:[{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2018/为你的Gatsby博客添加评论功能.md absPath of file >>> MarkdownRemark",frontmatter:{title:"为你的Gatsby博客添加评论功能",date:"March 12, 2018",path:"/2018/enable-comments-for-gatsby-blog",tags:["blog"],excerpt:"Gatsby打造的博客已经很不错了，但是缺少一个评论功能。本文简单介绍如何集成Disqus评论服务到你的博客站点。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2018/转用Gatsby搭建博客.md absPath of file >>> MarkdownRemark",frontmatter:{title:"转用Gatsby打造基于github的博客站点",date:"March 08, 2018",path:"/2018/blog-with-gatsby",tags:["blog","github","gatsby"],excerpt:"如何用Gatsby打造一个博客"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2018/一则奇怪的Toubleshooting.md absPath of file >>> MarkdownRemark",frontmatter:{title:"记一次奇怪的troubleshooting",date:"March 08, 2018",path:"/2018/skipper-sni-domain-fronting",tags:["skipper","SNI","domain fronting"],excerpt:"在Skipper转发请求到一个https站点的时候，返回莫名404."}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2016/JSON解析利器JQ.md absPath of file >>> MarkdownRemark",frontmatter:{title:"JSON解析利器---JQ",date:"March 25, 2016",path:"/2013/jq",tags:["bash","jq","json"],excerpt:"在API first的时代，json作为最常用的格式，充斥着程序猿的屏幕各个角落，掌握一门解析、过滤、转换json输出的工具，已经成为程序猿们安身立命的必要技能。 这里隆重向大家介绍[jq](https://stedolan.github.io/jq/)."}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2016/Function的协变.md absPath of file >>> MarkdownRemark",frontmatter:{title:"Function的协、逆变",date:"February 04, 2016",path:"/2016/function-covariant-contravariant",tags:["scala","functional programming"],excerpt:"泛型编程的时候，协变(covariant)还是逆变(contravariant)很重要，在设计上层API接口的时候，正确的使用协变、逆变可以更好地约束程序员的行为，让实现变得安全、一致。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2015/如何在Scala中实现AOP.md absPath of file >>> MarkdownRemark",frontmatter:{title:"用Mixin组合实现Scala中的AOP",date:"August 13, 2015",path:"/2015/aop-by-mixin-in-scala",tags:["scala","functional programming","AOP","mixin"],excerpt:"在Java世界，AOP（Aspect Oriented Programming， 面向方面编程)是很多框架的基础。这种将关注点按照“方面”来切分的编程模型极大地简化了编程的复杂度，尤其是在多维度因子交织在一起的时候的各种场景。对于代码的可读性、可维护性、可重用性都是极大的帮助。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2015/Scala雾里看花.md absPath of file >>> MarkdownRemark",frontmatter:{title:"Scala雾里看花",date:"April 23, 2015",path:"/2015/scala-trouble-shooting",tags:["scala","trouble shooting"],excerpt:"Scala的学习过程中，经常会碰到一些莫名其妙的现象，很多时候，这些语言层面的“怪象”都与scala编译器或者scala的类型系统有关。本文不是对编译器和类型系统的介绍，而是重点介绍遇到这些现象的时候，用什么样的方式，拨开云雾见蓝天，通过这些工具获取一些细节帮你了解编译器和类型系统如何工作。工欲善其事，必先利其器。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2015/Docker创建MySQL主从复制以及CDC测试.md absPath of file >>> MarkdownRemark",frontmatter:{title:"MySQL Master/Slave Replication on Docker",date:"April 21, 2015",path:"/2015/mysql-replication-on-docker",tags:["docker","mysql"],excerpt:"How to setup Mysql master/slave replication."}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2014/Scala函数式异常处理.md absPath of file >>> MarkdownRemark",frontmatter:{title:"Scala函数式异常处理",date:"May 04, 2014",path:"/2014/scala-error-handling-in-fp-style",tags:["scala","functional programming","exception handling"],excerpt:"经常看到很多示例代码，简洁的让人爱不释手，可是真正自己实现的时候，不得不添加各种各样的异常处理逻辑，最后发现代码总量的80%都是再做异常处理，而真正的代码逻辑只有很少的一部分。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2014/高种泛型.md absPath of file >>> MarkdownRemark",frontmatter:{title:"高种泛型 (Generics of a Higher Kind)",date:"January 08, 2014",path:"/2014/generics-of-a-higher-kind",tags:["scala","functional programming","Generics"],excerpt:"Generics of a Higher Kind翻译加自我理解。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/map-flatMap-for.md absPath of file >>> MarkdownRemark",frontmatter:{title:"map/flatMap/for in Action",date:"December 01, 2013",path:"/2013/map-flatmap-for",tags:["scala","functional programming"],excerpt:"前文说过了，高阶函数式函数式语言中的基石，而`map`, `flatMap`更是重要。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/fold编程.md absPath of file >>> MarkdownRemark",frontmatter:{title:"折纸的艺术：fold编程",date:"November 27, 2013",path:"/2013/fold",tags:["scala","functional programming","fold"],excerpt:"Eric Meijer说：递归是函数式编程的GOTO，应该尽可能避免。如何避免，OO中我们用while循环，FP中我们用`fold`。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/Monad.md absPath of file >>> MarkdownRemark",frontmatter:{title:"Monad",date:"November 26, 2013",path:"/2013/monad",tags:["scala","functional programming","monad"],excerpt:"函数式语言与OO（确切地讲是指令式编程）的思维方式是完全不同的，很多OO中的经验在函数式语言中不是很匹配，比如设计模式，那就是一个OO中的特定术语，而在FP中，大家常谈的是对于习惯OO思维的程序员来说玄而又玄的Monad。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/高阶函数.md absPath of file >>> MarkdownRemark",frontmatter:{title:"高阶函数",date:"November 21, 2013",path:"/2013/high-order-function",tags:["scala","functional programming","high order function"],excerpt:"所谓高阶函数（high order function），其实就是可以接受其他函数作为参数的函数。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/Actor协调并发场景下的集合操作.md absPath of file >>> MarkdownRemark",frontmatter:{title:"边建边学-3：Actor协调并发场景下的集合操作",date:"November 17, 2013",path:"/2013/actor-collection-collabration",tags:["scala","functional programming"],excerpt:"很多时候为了提高性能，减少IO操作，都会将数据load出来之后缓存在内存中。本站的实现过程中也遇到类似的问题，不希望每次有人访问的时候就读取一次md文件，或者从MongoDB中查一次，而是直接在内存中读取。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/Enumerator-Iteratee-Enumeratee.md absPath of file >>> MarkdownRemark",frontmatter:{title:"Enumerator / Iteratee / Enumeratee",date:"November 11, 2013",path:"/2013/enumerator-iteratee-enumeratee",tags:["scala","playframework","blog"],excerpt:"Stream对于指令式编程已经比较成熟了，有大量的类库，丰富的API。但是对于强调不可变量，尽可能无副作用的FP来说，要考虑语言适配的问题，而目前，流行的解决方案就是：Enumerator/Iteratee。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/集成PlantUML和Markdown.md absPath of file >>> MarkdownRemark",frontmatter:{title:"边建边学-2：集成PlantUML和Markdown",date:"November 07, 2013",path:"/2013/markdown-plantuml-integration",tags:["markdown","plantuml","blog"],excerpt:"如何用Markdown+PlantUML结合来写图文并茂的博客。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/EssentialAction-in-Playframework.md absPath of file >>> MarkdownRemark",frontmatter:{title:"EssentialAction in Playframework",date:"November 05, 2013",path:"/2013/essential-action-in-play",tags:["scala","playframework"],excerpt:"Playframework中EssentialAction理解"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/用markdown写博客.markdown absPath of file >>> MarkdownRemark",frontmatter:{title:"边建边学-1: 用Markdown写博文",date:"November 01, 2013",path:"/2013/blogging-with-markdown",tags:["markdown","blog"],excerpt:"本文将是一个系列文章，循序渐进地介绍本站的构建过程，不只是简单的技术介绍，重点是建站过程遇到的问题分析，以及解决的过程，所以起名**“边建边学”**系列。"}}},{node:{id:"/Users/lliu/github/smilingleo.github.io/src/pages/2013/开篇.md absPath of file >>> MarkdownRemark",frontmatter:{title:"开篇",date:"October 25, 2013",path:"/2013/start",tags:[],excerpt:"网络博客"}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---index-7d6dda309f5a73e87483.js.map